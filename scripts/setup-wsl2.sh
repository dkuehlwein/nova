#!/bin/bash

# Nova Frontend WSL2 Setup Script
# This script helps configure the frontend to work with a backend running in WSL2

echo "üöÄ Nova Frontend WSL2 Setup"
echo "================================"
echo ""

# Check if we're in WSL2
if grep -qi microsoft /proc/version 2>/dev/null; then
    echo "‚úÖ Running in WSL2 environment"
    
    # Get the WSL2 IP address
    WSL2_IP=$(hostname -I | awk '{print $1}')
    echo "üîç Detected WSL2 IP: $WSL2_IP"
    
    # Check if backend is running
    echo "üîç Testing backend connection..."
    if curl -s -o /dev/null -w "%{http_code}" "http://$WSL2_IP:8000/health" | grep -q "200"; then
        echo "‚úÖ Backend is accessible at http://$WSL2_IP:8000"
        
        # Update root .env file
        ENV_FILE="../.env"
        echo "üìù Updating $ENV_FILE..."
        
        # Check if .env file exists
        if [ -f "$ENV_FILE" ]; then
            echo "‚úÖ Found existing .env file"
            # Remove existing NEXT_PUBLIC_API_URL if present
            grep -v "NEXT_PUBLIC_API_URL" "$ENV_FILE" > "${ENV_FILE}.tmp" || touch "${ENV_FILE}.tmp"
            mv "${ENV_FILE}.tmp" "$ENV_FILE"
        else
            echo "üìÑ Creating new .env file"
            touch "$ENV_FILE"
        fi
        
        # Add the WSL2 API URL
        echo "" >> "$ENV_FILE"
        echo "# Frontend API Configuration (Auto-generated by setup-wsl2.sh on $(date))" >> "$ENV_FILE"
        echo "NEXT_PUBLIC_API_URL=http://$WSL2_IP:8000" >> "$ENV_FILE"
        
        # Also create/update frontend/.env file for Next.js
        FRONTEND_ENV_FILE="../frontend/.env"
        echo "üìù Updating $FRONTEND_ENV_FILE..."
        
        # Check if frontend .env file exists
        if [ -f "$FRONTEND_ENV_FILE" ]; then
            echo "‚úÖ Found existing frontend .env file"
            # Remove existing NEXT_PUBLIC_API_URL if present
            grep -v "NEXT_PUBLIC_API_URL" "$FRONTEND_ENV_FILE" > "${FRONTEND_ENV_FILE}.tmp" || touch "${FRONTEND_ENV_FILE}.tmp"
            mv "${FRONTEND_ENV_FILE}.tmp" "$FRONTEND_ENV_FILE"
        else
            echo "üìÑ Creating new frontend .env file"
            touch "$FRONTEND_ENV_FILE"
        fi
        
        # Add the WSL2 API URL to frontend .env
        echo "" >> "$FRONTEND_ENV_FILE"
        echo "# Frontend API Configuration (Auto-generated by setup-wsl2.sh on $(date))" >> "$FRONTEND_ENV_FILE"
        echo "NEXT_PUBLIC_API_URL=http://$WSL2_IP:8000" >> "$FRONTEND_ENV_FILE"
        
        echo "‚úÖ Configuration updated successfully!"
        echo ""
        echo "üìã Next steps:"
        echo "   1. Restart your frontend development server"
        echo "   2. Open http://localhost:3000 in your browser"
        echo "   3. Check the browser console for connection logs"
        echo ""
        echo "üí° If the IP changes, run this script again"
        
    else
        echo "‚ùå Backend not accessible at http://$WSL2_IP:8000"
        echo ""
        echo "üîß Troubleshooting:"
        echo "   1. Make sure the backend is running:"
        echo "      cd backend && python main.py"
        echo "   2. Check if port 8000 is open:"
        echo "      curl http://localhost:8000/health"
        echo "   3. Verify CORS settings in backend/main.py"
    fi
    
else
    echo "‚ÑπÔ∏è  Not running in WSL2 environment"
    echo ""
    echo "üîß For other environments:"
    echo "   - Local development: API should auto-detect localhost:8000"
    echo "   - Docker: Set NEXT_PUBLIC_API_URL=http://localhost:8000"
    echo "   - Production: Set NEXT_PUBLIC_API_URL=https://your-domain.com"
fi

echo ""
echo "üìö For more help, see frontend/README.md" 