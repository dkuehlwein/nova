# Dockerfile for tasks_md_mcp_server

# Use an official Python runtime as a parent image
FROM python:3.11-slim

# Set the working directory in the container
WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install uv
RUN pip install uv

# Copy the requirements file into the container at /app
# Ensure pyproject.toml is used if it's the source of truth for dependencies
# For now, assuming a requirements.txt might be generated by `uv pip freeze`
COPY pyproject.toml pyproject.toml
# If you generate a requirements.txt:
# COPY requirements.txt requirements.txt

# Install any needed packages specified in requirements.txt or pyproject.toml
# RUN uv pip install --system --no-cache -r requirements.txt
RUN uv pip sync --system --no-cache pyproject.toml

# Copy the rest of the application code into the container at /app
COPY ./src/tasks_md_server /app/tasks_md_server

# Make port 8000 available to the world outside this container (if applicable)
# EXPOSE 8000

# Define environment variable
# ENV MODULE_NAME="tasks_md_server.main"
# ENV VARIABLE_NAME="app"

# Run main.py when the container launches
# Adjust the command based on how your fastmcp server is run (e.g., uvicorn for an ASGI app)
# CMD ["python", "-m", "tasks_md_server.main"] 
# Example if using uvicorn:
# CMD ["uvicorn", "tasks_md_server.main:app", "--host", "0.0.0.0", "--port", "8000"]
CMD ["echo", "TODO: Define CMD for tasks_md_mcp_server"] 